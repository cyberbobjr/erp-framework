<?php

    namespace LeasesManager;

    use App\Core\Plugin\AppBasePlugin;
    use Cake\ORM\TableRegistry;
    use Cake\Routing\Router;
    use OperationsManager\Model\Table\TypeOpsTable;

    /**
     * Plugin for LeasesManager
     */
    class Plugin extends AppBasePlugin
    {
        private $renttypes;

        public function __construct(array $options = [])
        {
            parent::__construct($options);
            $this->renttypes = [__('Appel de charge') => TRUE,
                                __('Loyer')           => FALSE];
        }

        public function activate()
        {
            $this->registerRentTypes();
            return parent::activate(); // TODO: Change the autogenerated stub
        }

        public function deactivate()
        {
            $this->unregisterRentTypes();
            return parent::deactivate(); // TODO: Change the autogenerated stub
        }

        public function routes($routes)
        {
            parent::routes($routes); // TODO: Change the autogenerated stub
            $this->setMenus([
                ['url'      => '#',
                 'label'    => __('Baux'),
                 'order'    => 0,
                 'icon'     => '<i class="fa fa-file-text-o"></i>&nbsp;',
                 'submenus' => [
                     ['url'   => Router::url(['controller' => 'Leases',
                                              'action'     => 'add',
                                              'plugin'     => 'LeasesManager']),
                      'label' => __('CrÃ©er un bail'),
                      'order' => 0,
                      'icon'  => ''],
                     ['url'   => '',
                      'label' => '-',
                      'order' => 0,
                      'icon'  => ''],
                     ['url'   => Router::url(['controller' => 'Leases',
                                              'action'     => 'index',
                                              'plugin'     => 'LeasesManager']),
                      'label' => __('Lister les baux'),
                      'order' => 0,
                      'icon'  => '']
                 ]
                ]
            ]);
        }

        private function registerRentTypes()
        {
            /** @var TypeOpsTable $typeOpsTable */
            $typeOpsTable = TableRegistry::getTableLocator()
                                         ->get('OperationsManager.TypeOps');
            foreach ($this->renttypes as $renttype => $chooseable) {
                if (!$typeOpsTable->addTypeOps($this->getName(), $renttype, $chooseable)) {
                    throw new \Exception(__('Error during activation of plugin {0}', $this->getName()));
                }
            }
        }

        private function unregisterRentTypes()
        {
            /** @var TypeOpsTable $typeOpsTable */
            $typeOpsTable = TableRegistry::getTableLocator()
                                         ->get('OperationsManager.TypeOps');
            foreach ($this->renttypes as $renttype => $chooseable) {
                if (!$typeOpsTable->deleteByPluginNameAndLabel($this->getName(), $renttype)) {
                    throw new \Exception(__('Error during deactivation of plugin {0}, maybe operations still exists with type "{1}"', $this->getName(),
                        __('Loyer')));
                }
            }
        }
    }
